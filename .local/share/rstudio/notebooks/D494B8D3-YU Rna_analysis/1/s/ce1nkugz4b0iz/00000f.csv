"0","annotate_de_genes <- function(df){"
"0",""
"0","    df$hgnc_symbol <- rownames(df)"
"0","    mart <- useMart(biomart = ""ensembl"", dataset = ""hsapiens_gene_ensembl"")"
"0","    info <- getBM(attributes=c(""hgnc_symbol"","
"0","                               ""ensembl_gene_id_version"","
"0","                               ""chromosome_name"","
"0","                               ""start_position"","
"0","                               ""end_position"","
"0","                               ""strand"","
"0","                               ""entrezgene_description""),"
"0","                  filters = c(""hgnc_symbol""),"
"0","                  values = df$hgnc_symbol,"
"0","                  mart = mart,"
"0","                  useCache=FALSE)"
"0",""
"0","    tmp <- merge(df, info, by=""hgnc_symbol"")"
"0","    tmp$strand <- gsub(""-1"", ""-"", tmp$strand)"
"0","    tmp$strand <- gsub(""1"", ""+"", tmp$strand)"
"0","    tmp$hgnc_symbol <- make.names(tmp$hgnc_symbol, unique = T)"
"0","    tmp <- tmp[!grepl(""CHR"", tmp$chromosome_name),]"
"0",""
"0","    output_col <- c(""Gene"", ""Ensembl ID"", ""Chromosome"", ""Start"", ""Stop"", ""Strand"", ""Description"", ""Log2FC"", ""P-value"", ""Adj P-value"")"
"0","    tmp <- subset(tmp, select=c(hgnc_symbol, ensembl_gene_id_version, chromosome_name, start_position, end_position, strand, entrezgene_description, log2FoldChange, pvalue, padj))"
"0","    colnames(tmp) <- output_col"
"0",""
"0","    if(min(tmp$Log2FC) > 0){"
"0","        tmp <- tmp[order(-tmp$Log2FC),]"
"0","    }else{"
"0","        tmp <- tmp[order(tmp$Log2FC),]"
"0","    }"
"0",""
"0","    return(tmp)"
"0",""
"0","}"
